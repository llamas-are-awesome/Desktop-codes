#!/usr/bin/python3

# Replace RPG starter project with this code when new instructions are live
#Interested in creating a method that affects another class object? Here is a solution!

#```
from random import randint

#class Player:
 # def __init__(self):
#    self.dice = []
 # def roll(self):
#    self.dice = [] # clears current dice
#    for i in range(3):
#      self.dice.append(randint(1,6))
 # def get_dice(self):
#    return self.dice

#p1 = Player()


#p1.roll()

#print("Other player's original dice:")
#print(p1.get_dice())
#print(sum(p1.get_dice()))

def showInstructions():
  #print a main menu and the commands
  print('''
========
Commands:
  go [direction]
  get [item]
  look [object]
  quit
''')

def showStatus():
  #print the player's current status
  print('---------------------------')
  print('You are in the ' + currentRoom)
  #print the current inventory
  print('Inventory : ' + str(inventory))
  #print an item if there is one
  if "item" in rooms[currentRoom]:
    print('You see a ' + rooms[currentRoom]['item'])
  print("---------------------------")
  if "container" in rooms[currentRoom]:
    print('You see a ' + rooms[currentRoom]['container'])
  print("---------------------------")

#def combat():


#an inventory, which is initially empty
inventory = []

player_class = {

                    'Fighter' : {'hp':100, 'strength': 100, 'dex':100, 'spells':False},
                    'Mage' : {'hp':50, 'strength': 20, 'dex': 100, 'spells':True},
                    'Rogue' : {'hp':75, 'strength': 50, 'dex': 150, 'spells':False},


}
#a dictionary linking a room to other rooms
## A dictionary linking a room to other rooms
rooms = {

            'Entry Hall' : {
                  'south' : 'Training Room',
                  'east'  : 'Kitchen',
                  'item'  : 'key'
                },

            'Training Room' : {
                  'north' : 'Entry Hall',
                  'west'  : 'Dungeon',
                  'item'  : 'sword',
                  'item'  : 'dagger'
                },
            'Dungeon' : {
                  'south' : 'Training Room',
                  'creat' : 'dummy',
            },

            'Kitchen' : {
                  'west' : 'Entry Hall',
                  'south': 'Courtyard',
                  'item' : 'potion',
                  'down' : 'Basement',
               },
            'Courtyard' : {
                  'north' : 'Kitchen'
               },
            'Basement' : {
                  'up' : 'Kitchen',
                  'container' : 'chest',
            }
         }

#start the player in the Entry Hall
currentRoom = 'Entry Hall'

showInstructions()

#loop forever
while True:

  showStatus()

  #get the player's next 'move'
  #.split() breaks it up into an list array
  #eg typing 'go east' would give the list:
  #['go','east']
  move = ''
  while move == '':
    move = input('>')

  # split allows an items to have a space on them
  # get golden key is returned ["get", "golden key"]
  move = move.lower().split(" ", 1)
  if move[0].lower == 'q' or 'quit':
      print("Thanks for playing!")
  #if they type 'go' first
  if move[0] == 'go':
    #check that they are allowed wherever they want to go
    if move[1] in rooms[currentRoom]:
      #set the current room to the new room
      currentRoom = rooms[currentRoom][move[1]]
    #there is no door (link) to the new room
    else:
        print('You can\'t go that way!')

  #if they type 'get' first
  if move[0] == 'get' :
    #if the room contains an item, and the item is the one they want to get
    if "item" in rooms[currentRoom] and move[1] in rooms[currentRoom]['item']:
      #add the item to their inventory
      inventory += [move[1]]
      #display a helpful message
      print(move[1] + ' got!')
      #delete the item from the room
      del rooms[currentRoom]['item']
    #otherwise, if the item isn't there to get
    else:
      #tell them they can't get it
      print('Can\'t get ' + move[1] + '!')

  ## Define how a player can win
  if currentRoom == 'Courtyard' and 'key' in inventory and 'potion' in inventory:
    print('You escaped the house with the ultra rare key and magic potion... YOU WIN!')
    break

  ## If a player enters a room with a monster
  elif 'item' in rooms[currentRoom] and 'monster' in rooms[currentRoom]['item']:
    print('A monster has got you... GAME OVER!')
    break
